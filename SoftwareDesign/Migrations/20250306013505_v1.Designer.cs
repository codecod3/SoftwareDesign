// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareDesign;

#nullable disable

namespace SoftwareDesign.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20250306013505_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoftwareDesign.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationId"));

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseLinkCourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateQualified")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int>("FacultyLinkFacultyId")
                        .HasColumnType("int");

                    b.HasKey("CertificationId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseLinkCourseId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("FacultyLinkFacultyId");

                    b.ToTable("Certification", (string)null);
                });

            modelBuilder.Entity("SoftwareDesign.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Units")
                        .HasColumnType("smallint");

                    b.HasKey("CourseId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("SoftwareDesign.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("CpE");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculty", (string)null);
                });

            modelBuilder.Entity("SoftwareDesign.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<string>("EncodedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SectionNo")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId");

                    b.HasIndex("SectionNo");

                    b.HasIndex("StudentId");

                    b.ToTable("Registration", (string)null);
                });

            modelBuilder.Entity("SoftwareDesign.Section", b =>
                {
                    b.Property<int>("SectionNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionNo"));

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseLinkCourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("int");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("SectionNo");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseLinkCourseId");

                    b.ToTable("Section", (string)null);
                });

            modelBuilder.Entity("SoftwareDesign.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("SoftwareDesign.Certification", b =>
                {
                    b.HasOne("SoftwareDesign.Course", null)
                        .WithMany("CertificationList")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign.Course", "CourseLink")
                        .WithMany()
                        .HasForeignKey("CourseLinkCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign.Faculty", null)
                        .WithMany("CertificationList")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign.Faculty", "FacultyLink")
                        .WithMany()
                        .HasForeignKey("FacultyLinkFacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLink");

                    b.Navigation("FacultyLink");
                });

            modelBuilder.Entity("SoftwareDesign.Registration", b =>
                {
                    b.HasOne("SoftwareDesign.Section", null)
                        .WithMany("RegistrationList")
                        .HasForeignKey("SectionNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign.Student", null)
                        .WithMany("RegistrationList")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoftwareDesign.Section", b =>
                {
                    b.HasOne("SoftwareDesign.Course", null)
                        .WithMany("SectionList")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftwareDesign.Course", "CourseLink")
                        .WithMany()
                        .HasForeignKey("CourseLinkCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLink");
                });

            modelBuilder.Entity("SoftwareDesign.Course", b =>
                {
                    b.Navigation("CertificationList");

                    b.Navigation("SectionList");
                });

            modelBuilder.Entity("SoftwareDesign.Faculty", b =>
                {
                    b.Navigation("CertificationList");
                });

            modelBuilder.Entity("SoftwareDesign.Section", b =>
                {
                    b.Navigation("RegistrationList");
                });

            modelBuilder.Entity("SoftwareDesign.Student", b =>
                {
                    b.Navigation("RegistrationList");
                });
#pragma warning restore 612, 618
        }
    }
}
